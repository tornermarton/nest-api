import { Observable } from 'rxjs';

import { Entity } from '../core';
import { IQueryDto } from '../query';
import { PagedResource } from '../response';

export type AutoGeneratedColumns = 'id' | 'createdAt' | 'updatedAt';
export type CreateDto<T> = Omit<T, AutoGeneratedColumns>;
export type UpdateDto<T> = Partial<Omit<T, AutoGeneratedColumns | 'createdBy'>>;

export abstract class Repository<TModel extends Entity> {
  public abstract find<TFilter, TExpand extends Extract<keyof TModel, string>>(
    query: IQueryDto<TModel, TFilter, TExpand>,
  ): Observable<PagedResource<TModel>>;

  public abstract create(dto: CreateDto<TModel>): Observable<TModel>;
  public abstract read(id: string): Observable<TModel>;
  public abstract update(
    id: string,
    dto: UpdateDto<TModel>,
  ): Observable<TModel>;
  public abstract delete(id: string): Observable<void>;
}
